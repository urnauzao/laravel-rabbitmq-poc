version: '3'
services:
    app1-rabbitmq:
        container_name: app1-rabbitmq
        build:
            context: ./app1
            dockerfile: Dockerfile
            args:
                - PHP_VERSION=8.2-zts-bullseye
                - NODE_VERSION=20.5-bullseye-slim
                - NODE_ENV=development
                - APP_URL=https://analytics.lojahub.com.br
        image: teste-rabbitmq-app1
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8001}:80'
            # - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            APP_ENV: 'production'
            PHP_VERSION: '8.2.10-zts-bullseye'
            NODE_VERSION: '20.5-bullseye-slim'
            NODE_ENV: 'development'
            CACHE_DRIVER: 'redis'
            SESSION_DRIVER: 'redis'
        volumes:
            - './app1/docker/supervisord/supervisord.octane.conf:/etc/supervisor/conf.d/supervisord.conf'
            # - './app1/config/horizon.php:/var/www/app/config/horizon.php'
            # - './app1/.env:/var/www/app/.env'
            - './app1:/var/www/app'
        networks:
            - sail
        depends_on:
            - pgsql-rabbitmq
            - redis-rabbitmq
            - rabbitmq
    
    app2-rabbitmq:
        container_name: app2-rabbitmq
        build:
            context: ./app2
            dockerfile: Dockerfile
            args:
                - PHP_VERSION=8.1-zts-bullseye
                - NODE_VERSION=18-bullseye-slim
                - NODE_ENV=development
                - APP_URL=https://analytics.lojahub.com.br
        image: teste-rabbitmq-app2
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8002}:80'
            # - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            APP_ENV: 'production'
            PHP_VERSION: '8.1-zts-bullseye'
            NODE_VERSION: '18-bullseye-slim'
            NODE_ENV: 'development'
            CACHE_DRIVER: 'redis'
            SESSION_DRIVER: 'redis'
        volumes:
            - './app2/docker/supervisord/supervisord.octane.conf:/etc/supervisor/conf.d/supervisord.conf'
            # - './config/horizon.php:/var/www/app/config/horizon.php'
            # - './app2/.env:/var/www/app/.env'
            - './app2:/var/www/app'
        networks:
            - sail
        depends_on:
            - pgsql-rabbitmq
            - redis-rabbitmq
            - rabbitmq
    
    pgsql-rabbitmq:
        image: 'postgres:15'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE:-app}'
            POSTGRES_USER: '${DB_USERNAME:-postgres}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './app1/vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE:-app}'
                - '-U'
                - '${DB_USERNAME:-postgres}'
            retries: 3
            timeout: 5s

    redis-rabbitmq:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    rabbitmq:
        image: "rabbitmq:management"  # Use a imagem oficial do RabbitMQ com suporte ao plugin de gerenciamento
        container_name: rabbitmq
        ports:
            - "5672:5672"  # Porta padrão para conexões RabbitMQ
            - "15672:15672"  # Porta do plugin de gerenciamento
        environment:
            RABBITMQ_ERLANG_COOKIE: "cookie_secreto"  # Troque "cookie_secreto" por uma string de sua escolha
        volumes:
            - ./rabbitmq/data:/var/lib/rabbitmq  # Mapeia um volume para persistir os dados do RabbitMQ
        networks:
            - sail

networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
